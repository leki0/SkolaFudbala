/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rs.ac.bg.fon.ai.skolafudbala.forme;

import java.io.IOException;
import rs.ac.bg.fon.ai.skolafudbala.enums.Pozicija;
import rs.ac.bg.fon.ai.skolafudbala.klijent.Klijent;
import rs.ac.bg.fon.ai.skolafudbala.model.Fudbaler;
import rs.ac.bg.fon.ai.skolafudbala.model.TreningGrupa;
import rs.ac.bg.fon.ai.skolafudbala.nacinprikazaforme.Prikaz;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;



/**
 *
 * @author Korisnik
 */
public class UnosIzmjenaFudbaleraForma extends javax.swing.JFrame {

    String patern = "dd-MM-yyyy";
    SimpleDateFormat formater = new SimpleDateFormat(patern);
    Fudbaler f;
    Prikaz nacinPrikaza;
    Fudbaler fudbalerIzmjena = new Fudbaler();
    PregledFudbaleraForma pff;

    /**
     * Creates new form UnosFudbaleraForma
     */
    public UnosIzmjenaFudbaleraForma(PregledFudbaleraForma pff, Prikaz nacinPrikaza, Fudbaler fudbaler) {
        initComponents();
        this.nacinPrikaza = nacinPrikaza;
        this.fudbalerIzmjena = fudbaler;
        this.pff = pff;
        try {
            prikaz(nacinPrikaza);
        } catch (Exception ex) {
            if (ex instanceof IOException) {
                JOptionPane.showMessageDialog(this, "Greska! Pokusajte kasnije!", "GREŠKA", JOptionPane.ERROR_MESSAGE);
                System.exit(0);
            }
        }

    }

    public UnosIzmjenaFudbaleraForma(Prikaz nacinPrikaza, Fudbaler fudbaler) {
        initComponents();
        this.nacinPrikaza = nacinPrikaza;
        this.fudbalerIzmjena = fudbaler;
        try {
            prikaz(nacinPrikaza);
        } catch (Exception ex) {
            if (ex instanceof IOException) {
                JOptionPane.showMessageDialog(this, "Greska! Pokusajte kasnije!", "GREŠKA", JOptionPane.ERROR_MESSAGE);
                System.exit(0);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldPrezime = new javax.swing.JTextField();
        jTextFieldIme = new javax.swing.JTextField();
        jTextFieldJMBG = new javax.swing.JTextField();
        jTextFieldRodjenje = new javax.swing.JTextField();
        jButtonPonisti = new javax.swing.JButton();
        jComboBoxTreningGrupa = new javax.swing.JComboBox<>();
        jComboBoxPozicija = new javax.swing.JComboBox<>();
        jButtonDodaj = new javax.swing.JButton();
        jButtonSacuvajIzmjene = new javax.swing.JButton();
        jButtonObrisi = new javax.swing.JButton();
        jButtonOdustani = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ime:");

        jLabel2.setText("Prezime:");

        jLabel3.setText("JMBG:");

        jLabel4.setText("Pozicija:");

        jLabel5.setText("Datum rođenja:");

        jLabel6.setText("Trening grupa:");

        jTextFieldJMBG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldJMBGActionPerformed(evt);
            }
        });

        jTextFieldRodjenje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRodjenjeActionPerformed(evt);
            }
        });

        jButtonPonisti.setText("Poništi");
        jButtonPonisti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPonistiActionPerformed(evt);
            }
        });

        jComboBoxTreningGrupa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTreningGrupaActionPerformed(evt);
            }
        });

        jComboBoxPozicija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPozicijaActionPerformed(evt);
            }
        });

        jButtonDodaj.setText("Dodaj");
        jButtonDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajActionPerformed(evt);
            }
        });

        jButtonSacuvajIzmjene.setText("Sačuvaj izmjene");
        jButtonSacuvajIzmjene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSacuvajIzmjeneActionPerformed(evt);
            }
        });

        jButtonObrisi.setText("Obriši");
        jButtonObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiActionPerformed(evt);
            }
        });

        jButtonOdustani.setText("Odustani");
        jButtonOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOdustaniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonOdustani, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonSacuvajIzmjene, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(jButtonPonisti, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextFieldRodjenje, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                                .addComponent(jComboBoxTreningGrupa, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBoxPozicija, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldIme)
                                .addComponent(jTextFieldPrezime)
                                .addComponent(jTextFieldJMBG)))))
                .addGap(59, 59, 59))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldJMBG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxPozicija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldRodjenje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBoxTreningGrupa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonObrisi)
                    .addComponent(jButtonOdustani))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonSacuvajIzmjene, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonPonisti)
                        .addComponent(jButtonDodaj)))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldJMBGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldJMBGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldJMBGActionPerformed

    private void jButtonPonistiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPonistiActionPerformed
        ponovniUnos();
    }//GEN-LAST:event_jButtonPonistiActionPerformed

    private void jButtonDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajActionPerformed

        try {
            String ime = jTextFieldIme.getText();
            String prezime = jTextFieldPrezime.getText();
            String jmbg = jTextFieldJMBG.getText();
            Pozicija pozicija = (Pozicija) jComboBoxPozicija.getSelectedItem();
            String datumStr = jTextFieldRodjenje.getText();
            TreningGrupa tg = (TreningGrupa) jComboBoxTreningGrupa.getSelectedItem();
            String validan = validacija(ime, prezime, jmbg, pozicija, datumStr, tg);
            if (validan.equals("")) {
                String validanFormat = validirajFormat(ime, prezime, jmbg, datumStr);
                if (validanFormat.equals("")) {
                    SimpleDateFormat format = new SimpleDateFormat(patern);
                    Date datum = format.parse(datumStr);
                    System.out.println(tg.getGrupaId() + " " + tg.getNazivGrupe() + " " + tg.getTrener().getIme());
                    f = new Fudbaler(ime, prezime, jmbg, pozicija.toString(), tg, datum);
                    long fudbalerID = Klijent.getInstance().zapamtiFudbalera(f);
                    JOptionPane.showMessageDialog(this, "Sistem je zapamtio fudbalera", "Fudbaler zapamcen", JOptionPane.INFORMATION_MESSAGE);
                    ponovniUnos();
                } else {
                    JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti fudbalera!", "GRESKA", JOptionPane.ERROR_MESSAGE);
                    JOptionPane.showMessageDialog(this, "Neispravan format unosa: " + validanFormat, "GRESKA", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti fudbalera!", "GRESKA", JOptionPane.ERROR_MESSAGE);
                JOptionPane.showMessageDialog(this, "Morate da popunite polja: " + validan, "GRESKA", JOptionPane.ERROR_MESSAGE);

            }

        } catch (Exception ex) {
            if (ex instanceof IOException) {
                JOptionPane.showMessageDialog(this, "Greska! Pokusajte kasnije!", "GREŠKA", JOptionPane.ERROR_MESSAGE);
                System.exit(0);
            } else {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "GREŠKA", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonDodajActionPerformed

    private void jComboBoxPozicijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPozicijaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPozicijaActionPerformed

    private void jButtonSacuvajIzmjeneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSacuvajIzmjeneActionPerformed
        String ime = jTextFieldIme.getText();
        String prezime = jTextFieldPrezime.getText();
        String jmbg = jTextFieldJMBG.getText();
        String datumString = jTextFieldRodjenje.getText();
        Pozicija pozicija = (Pozicija) jComboBoxPozicija.getSelectedItem();
        TreningGrupa treningGrupa = (TreningGrupa) jComboBoxTreningGrupa.getSelectedItem();
        String validan = validacija(ime, prezime, jmbg, pozicija, datumString, treningGrupa);
        if (validan.equals("")) {
            try {
                SimpleDateFormat format = new SimpleDateFormat(patern);
                Date datum = format.parse(datumString);
                String validanFormat = validirajFormat(ime, prezime, jmbg, datumString);
                if (validanFormat.equals("")) {

                    Fudbaler fudbalerUpdate = new Fudbaler(fudbalerIzmjena.getFudbalerId(), ime, prezime, jmbg, pozicija.toString(), treningGrupa, datum);
                    int izmjenjenFudbaler = Klijent.getInstance().zapamtiIzmjeneFudbalera(fudbalerUpdate);
                    JOptionPane.showMessageDialog(this, "Sistem je zapamtio fudbalera!", "Fudbaler zapamcen", JOptionPane.INFORMATION_MESSAGE);

                    pff.popuniTabeluFudbaler();
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti fudbalera!", "GRESKA", JOptionPane.ERROR_MESSAGE);
                    JOptionPane.showMessageDialog(this, "Neispravan format unosa: " + validanFormat, "GRESKA", JOptionPane.ERROR_MESSAGE);
                }
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "Niste unijeli datum u ispravnom formatu! Ispravan format: (dd-MM-yyyy)", "GRESKA", JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                if (ex instanceof IOException) {
                    JOptionPane.showMessageDialog(this, "Greska! Pokusajte kasnije!", "GREŠKA", JOptionPane.ERROR_MESSAGE);
                    System.exit(0);
                } else {
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "GREšKA", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti fudbalera!", "GREŠKA", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(this, "Morate da popunite polja: " + validan, "GRESKA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonSacuvajIzmjeneActionPerformed

    private void jButtonObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiActionPerformed
        String ime = jTextFieldIme.getText();
        String prezime = jTextFieldPrezime.getText();
        String jmbg = jTextFieldJMBG.getText();
        String datumString = jTextFieldRodjenje.getText();
        Pozicija pozicija = (Pozicija) jComboBoxPozicija.getSelectedItem();
        TreningGrupa tg = (TreningGrupa) jComboBoxTreningGrupa.getSelectedItem();
        try {
            SimpleDateFormat format = new SimpleDateFormat(patern);
            Date datum = format.parse(datumString);
            Fudbaler fudbalerBrisanje = new Fudbaler(fudbalerIzmjena.getFudbalerId(), ime, prezime, jmbg, pozicija.toString(), tg, datum);
            int obrisanTrener = Klijent.getInstance().obrisiFudbalera(fudbalerBrisanje);
            JOptionPane.showMessageDialog(this, "Sistem je obrisao fudbalera!", "Fudbaler obrisan", JOptionPane.INFORMATION_MESSAGE);
            pff.popuniTabeluFudbaler();
            this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "GREšKA", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonObrisiActionPerformed

    private void jButtonOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOdustaniActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonOdustaniActionPerformed

    private void jTextFieldRodjenjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRodjenjeActionPerformed

    }//GEN-LAST:event_jTextFieldRodjenjeActionPerformed

    private void jComboBoxTreningGrupaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTreningGrupaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTreningGrupaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDodaj;
    private javax.swing.JButton jButtonObrisi;
    private javax.swing.JButton jButtonOdustani;
    private javax.swing.JButton jButtonPonisti;
    private javax.swing.JButton jButtonSacuvajIzmjene;
    private javax.swing.JComboBox<Pozicija> jComboBoxPozicija;
    private javax.swing.JComboBox<TreningGrupa> jComboBoxTreningGrupa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextFieldIme;
    private javax.swing.JTextField jTextFieldJMBG;
    private javax.swing.JTextField jTextFieldPrezime;
    private javax.swing.JTextField jTextFieldRodjenje;
    // End of variables declaration//GEN-END:variables

    private void popuniComboPozicija(int i) {
        if (i == 0) {
            jComboBoxPozicija.setModel(new DefaultComboBoxModel<>(Pozicija.values()));
            jComboBoxPozicija.setSelectedIndex(-1);
        } else {
            jComboBoxPozicija.setModel(new DefaultComboBoxModel<>(Pozicija.values()));

        }
    }

    private void popuniComboTreningGrupa(int br, TreningGrupa treningGrupa) throws Exception {

        List<TreningGrupa> listaTreningGrupa = new ArrayList<>();
        listaTreningGrupa = Klijent.getInstance().ucitajListuTreningGrupe();

        if (br == 0) {
            for (TreningGrupa tg : listaTreningGrupa) {
                jComboBoxTreningGrupa.addItem(tg);
            }
            jComboBoxTreningGrupa.setSelectedIndex(-1);
        } else {
            for (TreningGrupa tg : listaTreningGrupa) {
                jComboBoxTreningGrupa.addItem(tg);
            }
            jComboBoxTreningGrupa.setSelectedItem(treningGrupa);

        }
    }

    private String validacija(String ime, String prezime, String jmbg, Pozicija pozicija, String datumStr, TreningGrupa tg) {
        String validan = "";
        if (ime.equals("")) {
            validan += "Ime | ";
        }
        if (prezime.equals("")) {
            validan += "Prezime | ";
        }
        if (jmbg.equals("")) {
            validan += "JMBG | ";
        }
        if (pozicija == null) {
            validan += "Pozicija | ";
        }
        if (datumStr.equals("")) {
            validan += "Datum | ";
        }
        if (tg == null) {
            validan += "Trening grupa | ";
        }
        return validan;
    }

    private void prikaz(Prikaz nacinPrikaza) throws Exception {
        if (nacinPrikaza == Prikaz.DODAJ_FORMA) {
            popuniComboPozicija(0);
            popuniComboTreningGrupa(0, null);
            jButtonDodaj.setVisible(true);
            jButtonSacuvajIzmjene.setVisible(false);
            jButtonObrisi.setVisible(false);
            jButtonOdustani.setVisible(false);
            this.setTitle("Unos podataka o fudbaleru");
        } else if (nacinPrikaza == Prikaz.IZMJENI_FORMA) {
            jTextFieldIme.setText(fudbalerIzmjena.getIme());
            jTextFieldPrezime.setText(fudbalerIzmjena.getPrezime());
            jTextFieldJMBG.setText(fudbalerIzmjena.getJmbg());
            jTextFieldRodjenje.setText(formater.format(fudbalerIzmjena.getDatumRodjenja()));
            jComboBoxPozicija.removeAllItems();
            Pozicija pozicija;
            switch (fudbalerIzmjena.getPozicija()) {
                case "VEZNI":
                    pozicija = Pozicija.VEZNI;
                    break;
                case "BEK":
                    pozicija = Pozicija.BEK;
                    break;
                case "GOLMAN":
                    pozicija = Pozicija.GOLMAN;
                    break;
                case "KRILO":
                    pozicija = Pozicija.KRILO;
                    break;
                case "STOPER":
                    pozicija = Pozicija.STOPER;
                    break;
                default:
                    pozicija = null;
                    break;
            }
            popuniComboPozicija(1);
            jComboBoxPozicija.setSelectedItem(pozicija);
            this.setTitle("Izmjena podataka o fudbaleru");
            jTextFieldRodjenje.setEnabled(false);
            jButtonObrisi.setVisible(false);
            jButtonOdustani.setVisible(false);
            jButtonDodaj.setVisible(false);
            jButtonSacuvajIzmjene.setVisible(true);
            jTextFieldJMBG.setEnabled(false);
            jComboBoxTreningGrupa.removeAllItems();
            popuniComboTreningGrupa(1, fudbalerIzmjena.getTreningGrupa());
        } else if (nacinPrikaza == Prikaz.OBRISI_FORMA) {
            jButtonDodaj.setVisible(false);
            jButtonSacuvajIzmjene.setVisible(false);
            jButtonPonisti.setVisible(false);
            jButtonObrisi.setVisible(true);
            jButtonOdustani.setVisible(true);
            jTextFieldIme.setText(fudbalerIzmjena.getIme());
            jTextFieldPrezime.setText(fudbalerIzmjena.getPrezime());
            jTextFieldJMBG.setText(fudbalerIzmjena.getJmbg());
            jTextFieldRodjenje.setText(formater.format(fudbalerIzmjena.getDatumRodjenja()));
            jComboBoxPozicija.removeAllItems();
            Pozicija pozicija;
            switch (fudbalerIzmjena.getPozicija()) {
                case "VEZNI":
                    pozicija = Pozicija.VEZNI;
                    break;
                case "BEK":
                    pozicija = Pozicija.BEK;
                    break;
                case "GOLMAN":
                    pozicija = Pozicija.GOLMAN;
                    break;
                case "KRILO":
                    pozicija = Pozicija.KRILO;
                    break;
                case "STOPER":
                    pozicija = Pozicija.STOPER;
                    break;
                default:
                    pozicija = null;
                    break;
            }
            popuniComboPozicija(1);
            jComboBoxPozicija.setSelectedItem(pozicija);
            jTextFieldIme.setEditable(false);
            jTextFieldPrezime.setEditable(false);
            jTextFieldJMBG.setEditable(false);
            jTextFieldJMBG.setEditable(false);
            jTextFieldRodjenje.setEditable(false);
            jComboBoxPozicija.setEnabled(false);
            jComboBoxTreningGrupa.setEnabled(false);
            this.setTitle("Potvrda brisanja fudbalera");
            jComboBoxTreningGrupa.removeAllItems();
            popuniComboTreningGrupa(1, fudbalerIzmjena.getTreningGrupa());
        }
    }

    private String validirajFormat(String ime, String prezime, String jmbg, String datumStr) {
        String validanFormat = "";
        try {

            if (!ime.matches("[a-zA-Z]+") || !Character.isUpperCase(ime.charAt(0))) {
                validanFormat += "Ime | ";
            }
            if (!prezime.matches("[a-zA-Z]+") || !Character.isUpperCase(prezime.charAt(0))) {
                validanFormat += "Prezime | ";
            }
            if (!jmbg.matches("\\d+")) {
                validanFormat += "JMBG mora da sadrzi samo cifre | ";
            }
            if (jmbg.length() != 13) {
                validanFormat += "JMBG mora da sadrzi tačno 13 cifara | ";
            }
            SimpleDateFormat format = new SimpleDateFormat(patern);
            Date datum = format.parse(datumStr);
            String dan = datumStr.substring(0, 2);
            String mjesec = datumStr.substring(3, 5);
            String godina = datumStr.substring(7, 10);

            String prvihSedam = dan + mjesec + godina;

            if (!datum.before(new Date())) {
                validanFormat += "Datum mora biti dan u prošlosti";
            } else {
                if (!prvihSedam.equals(jmbg.substring(0, 7))) {
                    validanFormat += "Datum i JMBG nisu usaglašeni | ";
                }
            }

        } catch (ParseException ex) {
            validanFormat += "Datum mora biti u formatu dd-MM-yyyy";
        }
        return validanFormat;
    }

    private void ponovniUnos() {
        jTextFieldIme.setText("");
        jTextFieldPrezime.setText("");
        jTextFieldJMBG.setText("");
        jTextFieldRodjenje.setText("");
        jComboBoxPozicija.setSelectedIndex(-1);
        jComboBoxTreningGrupa.setSelectedIndex(-1);
    }

}
