/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rs.ac.bg.fon.ai.skolafudbala.formeServer;

import java.io.IOException;
import rs.ac.bg.fon.ai.skolafudbala.server.Server;
import javax.swing.JOptionPane;



/**
 *
 * @author Korisnik
 */
public class ServerForma extends javax.swing.JFrame {

    Server s;

    /**
     * Creates new form ServerForma
     */
    public ServerForma() {
        initComponents();
        jButtonZaustaviServer.setEnabled(false);
        this.setTitle("Server");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelPokreni = new javax.swing.JLabel();
        jButtonZaustaviServer = new javax.swing.JButton();
        jButtonPokreniServer1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelPokreni.setText("Server nije pokrenut!");

        jButtonZaustaviServer.setText("Zaustavi server");
        jButtonZaustaviServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZaustaviServerActionPerformed(evt);
            }
        });

        jButtonPokreniServer1.setText("Pokreni server");
        jButtonPokreniServer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPokreniServer1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jButtonPokreniServer1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190)
                .addComponent(jButtonZaustaviServer, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 44, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelPokreni, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(200, 200, 200))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabelPokreni)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPokreniServer1)
                    .addComponent(jButtonZaustaviServer))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonZaustaviServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZaustaviServerActionPerformed
        try {
            if (s.getsSocket() != null && s.getsSocket().isBound()) {
                if (s.getListaPrijavljenih().size() != 0 && s.getListaNiti().size() != 0) {
                    int potvrda = JOptionPane.showConfirmDialog(this, "Jos uvijek nisu svi klijenti odjavljeni? Da li zaista zelite da zaustavite server?", "Potvrda", JOptionPane.YES_NO_OPTION);
                    if (potvrda == 0) {
                        s.getsSocket().close();
                        System.out.println("Server je zaustavljen!");
                        jLabelPokreni.setText("Server je zaustavljen!");
                        jButtonZaustaviServer.setEnabled(false);
                        jButtonPokreniServer1.setEnabled(true);
                    }
                } else {
                    s.getsSocket().close();
                    System.out.println("Server je zaustavljen!");
                    jLabelPokreni.setText("Server je zaustavljen!");
                    jButtonZaustaviServer.setEnabled(false);
                    jButtonPokreniServer1.setEnabled(true);
                }
            }
        } catch (IOException ex) {
            System.out.println("Greska prilikom zaustavljanja servera!" + ex.getMessage());
        }
    }//GEN-LAST:event_jButtonZaustaviServerActionPerformed

    private void jButtonPokreniServer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPokreniServer1ActionPerformed
        s = new Server(this);
        jLabelPokreni.setText("Server pokrenut!");
        jButtonPokreniServer1.setEnabled(false);
        jButtonZaustaviServer.setEnabled(true);
    }//GEN-LAST:event_jButtonPokreniServer1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPokreniServer1;
    private javax.swing.JButton jButtonZaustaviServer;
    private javax.swing.JLabel jLabelPokreni;
    // End of variables declaration//GEN-END:variables
}
